{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ronaldaveling/git/keystone/sandbox/keystone-next-lite-project/pages/post/[slug].js\";\nimport React from 'react';\nimport Image from 'next/image';\nexport var __N_SSG = true;\nexport default function HomePage(_ref) {\n  var post = _ref.post;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      src: post.image.src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/ronaldaveling/git/keystone/sandbox/keystone-next-lite-project/pages/post/[slug].js"],"names":["React","Image","HomePage","post","title","image","src","content"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAGA,eAAe,SAASC,QAAT,OAA4B;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACzC,sBACE;AAAA,4BACE;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAED,IAAI,CAACE,KAAL,CAAWC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBACGH,IAAI,CAACI;AADR;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;KAVuBL,Q","sourcesContent":["import React from 'react';\nimport Image from 'next/image';\nimport { lists } from '.keystone/api';\n\nexport default function HomePage({ post }) {\n  return (\n    <div>\n      <h1>{post.title}</h1>\n      <Image src={post.image.src} />\n      <div>\n        {post.content}\n      </div>\n    </div>\n  );\n}\n\nexport async function getStaticProps({ slug }) {\n  const post = await lists.Post.findOne({\n    where: { slug },\n    resolveFields: 'title image content',\n  });\n  return { props: { post } };\n}"]},"metadata":{},"sourceType":"module"}